def binary_search(arr, target):
    left, right = 0, len(arr) - 1

    while left <= right:
        mid = (left + right) // 2
        print(f"Current mid index: {mid}, mid value: {arr[mid]}")  # Print mid index and value

        # Check if the target is present at mid
        if arr[mid] == target:
            return mid
        # If the target is greater, ignore the left half
        elif arr[mid] < target:
            left = mid + 1
        # If the target is smaller, ignore the right half
        else:
            right = mid - 1

    # If we reach here, the element was not present
    return -1

# Example with 1 element
arr1 = [5]
target1 = 5
result1 = binary_search(arr1, target1)
print(f"Result for array with 1 element: {'Element is present at index ' + str(result1) if result1 != -1 else 'Element is not present in array'}\n")

# Example with 2 elements
arr2 = [2, 3]
target2 = 3
result2 = binary_search(arr2, target2)
print(f"Result for array with 2 elements: {'Element is present at index ' + str(result2) if result2 != -1 else 'Element is not present in array'}\n")

# Example with 6 elements
arr6 = [1, 3, 5, 7, 9, 11]
target6 = 7
result6 = binary_search(arr6, target6)
print(f"Result for array with 6 elements: {'Element is present at index ' + str(result6) if result6 != -1 else 'Element is not present in array'}\n")
